{"version":3,"file":"static/js/928.f9e5e026.chunk.js","mappings":"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","sources":["Detail.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, {useEffect, useState, useContext} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Navbar, Container, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {재고context} from './App.js';\r\n\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.색상 }\r\n`;\r\n\r\n\r\n// 예전 문법\r\n// class Detail2 extends React.Component {\r\n\r\n//     componentDidMount() {\r\n            //컴포넌트 등장 되었을 때 실행할 코드\r\n//     }\r\n\r\n//     componentWillUnmount(){\r\n            //컴포넌트 퇴장되기 직전에 실행할 코드\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nfunction Detail(props){\r\n\r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n    let 재고 = useContext(재고context);\r\n\r\n    useEffect(()=>{\r\n\r\n        // axios.get(); //Detail 컴포넌트 등장할 때도 요청 가능함\r\n\r\n        //컴포넌트가  mount 되었을때, update 될때 특정 코드를 실행할 수 있음\r\n        \r\n        //2초 후에 alert 창을 안보이게 해줘\r\n        let 타이머 = setTimeout(()=>{ alert변경(false) }, 2000);\r\n        return () => { clearTimeout(타이머) }\r\n\r\n        //컴포넌트가 사라질 때 코드를 실행시킬 수 있음\r\n        // return function 어쩌구(){ 실행할코드 } // return ()=>{} 가능\r\n    }, []); // },[] <=실행조건 //  [alert] alert 라는 state가 업데이트 될 때만 실행됨 //[] 빈칸이면 다시 업데이트 될때 실행이 되지않음 = Detail 등장 시에만 실행되고 끝남\r\n\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n        return 상품.id == id\r\n    });\r\n\r\n\r\n    useEffect( ()=>{\r\n        var arr = localStorage.getItem('watched');\r\n        if ( arr == null ) { arr = [] } else { arr = JSON.parse(arr); }\r\n\r\n        arr.push(id);\r\n        arr = new Set(arr);\r\n        arr = [...arr];\r\n\r\n        localStorage.setItem('watched', JSON.stringify(arr) );\r\n    },[] )\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <박스>\r\n                <제목 className=\"red\">Detail</제목>\r\n            </박스>\r\n\r\n            { inputData }\r\n            <input onChange={(e) => { inputData변경(e.target.value) }}/>\r\n\r\n            {\r\n                alert === true\r\n                ?   (<div className=\"my-alert2\">\r\n                        <p>재고가 얼마 남지 않았습니다.</p>\r\n                    </div>)\r\n                :   null\r\n            }\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n                    <p>{찾은상품.content}</p>\r\n                    <p>{찾은상품.price}원</p>\r\n\r\n                    <Info 재고={props.재고}></Info>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n\r\n                        props.재고변경([9,10,11]);\r\n                        props.dispatch({type : '항목추가', 데이터 : {id:찾은상품.id, name:찾은상품.title, quan:1} });\r\n                        history.push('/cart');\r\n\r\n                    }}>주문하기</button> \r\n                    <button className=\"btn btn-danger\" onClick={()=>{ \r\n                        history.goBack();\r\n                    }}>뒤로가기</button> \r\n                </div>\r\n            </div>\r\n\r\n            <Nav className='mt-5' variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick= { ()=>{ 스위치변경(false); 누른탭변경(0) } }>Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick= { ()=>{ 스위치변경(false); 누른탭변경(1) } }>Option 2</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            {/* 애니메이션\r\n            in : 애니메이션 켜는 스위치 (true면 동작함) - 변수나 state로 저장해서 쓰자\r\n            classNames : 애니메이션 이름 (작명) - class로 애니메이션 넣기\r\n            timeout : 애니메이션 동작 시간 */}\r\n            <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n            <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\r\n            </CSSTransition>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\n// if문\r\nfunction TabContent(props) {\r\n\r\n    useEffect(()=>{\r\n        props.스위치변경(true);\r\n    });\r\n\r\n    if (props.누른탭 === 0) {\r\n        return <div>0번째 내용입니다</div>\r\n    } else if (props.누른탭 === 1) {\r\n        return <div>1번째 내용입니다</div>\r\n    } else if(props.누른탭 === 2){\r\n        return <div>2번째 내용입니다</div>\r\n    }\r\n}\r\n\r\n//하위의 하위 props 하는 법\r\n\r\nfunction Info(props){\r\n    return (\r\n        <p>재고 : {props.재고[0]}</p>\r\n    )\r\n}\r\n\r\nfunction state를props화(state){\r\n    return {\r\n        state : state.reducer,\r\n        alert열렸니 : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Detail)"],"names":["박스","styled","제목","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","reducer2","useState","alert","alert변경","inputData","inputData변경","누른탭변경","스위치","useContext","재고context","타이머","setTimeout","clearTimeout","id","useParams","history","useHistory","찾은상품","shoes","find","상품","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","className","onChange","e","target","value","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","goBack","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout"],"sourceRoot":""}